<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.king.library.sys.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.king.library.sys.pojo.SysUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="user_type" jdbcType="CHAR" property="userType" />
    <result column="reg_ip" jdbcType="VARCHAR" property="regIp" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="login_count" jdbcType="INTEGER" property="loginCount" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.king.library.sys.pojo.SysUser">
    insert into sys_user (id, username, password, 
      nickname, mobile, email, 
      qq, birthday, gender, 
      avatar, user_type, reg_ip, 
      last_login_ip, last_login_time, login_count, 
      remark, status, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{gender,jdbcType=TINYINT}, 
      #{avatar,jdbcType=VARCHAR}, #{userType,jdbcType=CHAR}, #{regIp,jdbcType=VARCHAR}, 
      #{lastLoginIp,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{loginCount,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.king.library.sys.pojo.SysUser">
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      gender = #{gender,jdbcType=TINYINT},
      avatar = #{avatar,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=CHAR},
      reg_ip = #{regIp,jdbcType=VARCHAR},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      login_count = #{loginCount,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, username, password, nickname, mobile, email, qq, birthday, gender, avatar, 
    user_type, reg_ip, last_login_ip, last_login_time, login_count, remark, status, create_time, 
    update_time
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, username, password, nickname, mobile, email, qq, birthday, gender, avatar, 
    user_type, reg_ip, last_login_ip, last_login_time, login_count, remark, status, create_time, 
    update_time
    from sys_user
  </select>
    <select id="getUserByName" resultMap="BaseResultMap">
      select id, username, password, nickname, mobile, email, qq, birthday, gender, avatar,
        user_type, reg_ip, last_login_ip, last_login_time, login_count, remark, status, create_time,
        update_time
        from sys_user where username=#{username}
    </select>
  <select id="findUser" resultMap="BaseResultMap">
    select id, username, password, nickname, mobile, email, qq, birthday, gender, avatar,
        user_type, reg_ip, last_login_ip, last_login_time, login_count, remark, status, create_time,
        update_time
        from sys_user
        <where>
          <if test="id != null">
            id=#{id}
          </if>
          <if test="username != null">
            and username=#{username}
          </if>
          <if test="password != null">
            and password=#{password}
          </if>
          <if test="nickname != null">
            and nickname=#{nickname}
          </if>
          <if test="mobile != null">
            and mobile=#{mobile}
          </if>
          <if test="email != null">
            and email=#{email}
          </if>
          <if test="qq != null">
            and qq=#{qq}
          </if>
          <if test="birthday != null">
            and birthday=#{birthday}
          </if>
          <if test="gender != null">
            and gender=#{gender}
          </if>
          <if test="avatar != null">
            and avatar=#{avatar}
          </if>
          <if test="userType != null">
            and user_type=#{userType}
          </if>
          <if test="status != null">
            and status=#{status}
          </if>
        </where>
  </select>
</mapper>